{"version":3,"sources":["compontent/List.js","compontent/Input.js","pages/TodoList.js","index.js"],"names":["List","arr1","this","props","lists","filter","item","done","arr2","style","marginLeft","backgroundColor","borderRadius","color","length","renderlists","Component","Input","type","value","onChange","handleChange","placeholder","margin","autoFocus","borderColor","onClick","addTodo","Todolist","e","setState","inputValue","target","state","title","alert","delTodo","index","idx","toggle","newlists","JSON","parse","stringify","map","todo","key","checked","localStorage","getItem","setItem","border","width","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2bfc48a5.chunk.js","sourcesContent":["//List.js\r\nimport React, { Component } from 'react'\r\n\r\nclass List extends Component {\r\n    render() {\r\n         //done为false:正在进行\r\n         let arr1=this.props.lists.filter(item=>!item.done);\r\n         //done为true：已经完成\r\n         let arr2=this.props.lists.filter(item=>item.done);\r\n        return (\r\n            <div>\r\n               <h2 style={{marginLeft:'20px'}}>\r\n                    正在进行&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <span style={{backgroundColor:'#B0C4DE',borderRadius:50,color:'white'}}>&nbsp;{arr1.length}&nbsp;</span>\r\n                </h2>\r\n                <ul>\r\n                    {   \r\n                        this.props.renderlists(false)\r\n                    }\r\n                </ul>  \r\n                <h2 style={{marginLeft:'20px'}}>\r\n                    已经完成&nbsp;&nbsp;&nbsp;&nbsp;\r\n                    <span style={{backgroundColor:'#B0C4DE',borderRadius:50,color:'white'}}>&nbsp;{arr2.length}&nbsp;</span>\r\n                </h2>\r\n                <ul>\r\n                    {\r\n                        this.props.renderlists(true)\r\n                    }\r\n                </ul> \r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default List;\r\n","//Input.js\r\nimport React, { Component } from 'react'\r\n\r\nclass Input extends Component {\r\n    render() {\r\n        return (\r\n            <div>\r\n                <input\r\n                type=\"text\"\r\n                value={this.props.value}\r\n                onChange={this.props.handleChange}\r\n                placeholder='添加ToDo'\r\n                style={{margin:'20px'}}\r\n                autoFocus\r\n               />\r\n                &nbsp;&nbsp;&nbsp;&nbsp;\r\n                <button\r\n                style={{backgroundColor:'#4169E1',borderRadius:5,color:'white',borderColor:'#4169E1'}}\r\n                onClick={this.props.addTodo}\r\n                >添加</button>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default Input;\r\n","//TodoList.js\r\nimport React, { Component } from 'react';\r\nimport List from '../compontent/List'\r\nimport Input from '../compontent/Input'\r\n\r\n\r\nexport default class Todolist extends Component {\r\n    constructor(){\r\n        super();\r\n        //声明状态\r\n        this.state={\r\n            inputValue:'',\r\n            lists:[]\r\n        }\r\n    }\r\n    //获取输入的值\r\n    handleChange=(e)=>{\r\n        this.setState({inputValue:e.target.value});\r\n    }\r\n    //本地存储\r\n    componentDidMount(){\r\n        // this.input.focus();\r\n        let lists=localStorage.getItem('lists');\r\n        if(lists){\r\n            this.setState({\r\n                lists:JSON.parse(lists)\r\n            })\r\n        }\r\n    }\r\n    componentDidUpdate(){\r\n        localStorage.setItem(\r\n            'lists',\r\n            JSON.stringify(this.state.lists)\r\n        )\r\n        return true;\r\n    }\r\n    //添加列表项\r\n    addTodo=()=>{\r\n        if(this.state.inputValue === ''){\r\n            alert('输入内容不能为空');\r\n            return ;\r\n        }\r\n        this.setState({\r\n            lists:[\r\n                ...this.state.lists,\r\n                {\r\n                    title:this.state.inputValue,\r\n                    done:false\r\n                }\r\n            ]\r\n        })\r\n        // this.state.inputValue='';\r\n        this.setState({inputValue:''})\r\n    }\r\n    //删除列表项\r\n    delTodo=(index)=>{\r\n        this.setState({\r\n            lists:this.state.lists.filter((item,idx)=>idx!==index)\r\n        });\r\n    }\r\n    //状态转换\r\n    toggle=(index)=>{\r\n            let newlists=JSON.parse(JSON.stringify(this.state.lists));\r\n            newlists[index].done=!newlists[index].done;\r\n            this.setState({\r\n                lists:newlists\r\n            })\r\n    }\r\n    //渲染列表\r\n    renderlists=(done)=>{\r\n        return this.state.lists.map((todo,index)=>{\r\n            if(done===todo.done){\r\n                return <li key={index}>\r\n                <input\r\n                type=\"checkbox\"\r\n                onClick={()=>this.toggle(index)} \r\n                checked={done} \r\n                />\r\n                <span>{todo.title}&nbsp;&nbsp;&nbsp;&nbsp;</span>\r\n                <button \r\n                style={{backgroundColor:'#4169E1',borderRadius:5,color:'white',borderColor:'#4169E1'}}\r\n                onClick={()=>this.delTodo(index)}\r\n                >删除</button>\r\n            </li>\r\n            }\r\n            \r\n        })\r\n    }\r\n    render() {\r\n        return (\r\n            <div style={{backgroundColor:'#f5f5f5',border:'2px solid #708090',width:'600px',margin:'0 auto'}}>\r\n                <h2 style={{marginLeft:'20px'}}>\r\n                    ToDoList\r\n                </h2>\r\n                <Input \r\n                value={this.state.inputValue}\r\n                handleChange={this.handleChange}\r\n                addTodo={this.addTodo}/>\r\n                <List \r\n                lists={this.state.lists}\r\n                renderlists={this.renderlists}/>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n","//index.js\r\nimport React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport TodoList from './pages/TodoList'\r\n\r\nReactDOM.render(\r\n    <TodoList />,\r\n    document.getElementById('root')\r\n)\r\n"],"sourceRoot":""}